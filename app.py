# import stripe
# stripe.api_key = "pk_test_51Kux0CJJ4eit2YqKsLuZskgAPyUZnwM97oja3CTGEltsn6w9o2t6veYSEZqDT2XWb0ZElLN5eP03bSgvuKaXpYVg00A4M39rNO"

# p=stripe.Product.create(name="Gold Special")
# print(p)
# import requests, time
# r = requests.post('https://pretty-printed-request-bin.herokuapp.com/1j3s3p01', data={"ts":time.time()})
# print(r.status_code) 
# print (r.content)
# import psycopg2
from flask import Flask, render_template, request,jsonify
import requests 
# import pymongo

# client=pymongo.MongoClinent('mongodb://127.0.0.1:27017/')
# mydb=client['StripeTables']

# idsTable=mydb.IdTable

def get_database():
    from pymongo import MongoClient
    import pymongo

    CONNECTION_STRING = 'mongodb://127.0.0.1:27017/'

    from pymongo import MongoClient
    client = MongoClient(CONNECTION_STRING)

    return client['StripeTables']

db=get_database()
idsTable=db['idsTable']
# con = psycopg2.connect(database="stripe", user="postgres", password="1720", host="127.0.0.1", port="5432")
# cur = con.cursor()
# cur.execute('''CREATE TABLE StripeTable
#         (
#                 counter int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
#                 id varchar(50) not null 
#             );''')

app = Flask(__name__)
app.config['DEBUG'] = True

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/charge', methods=['POST'])
def charge():
    api_key = 'sk_test_51Kux0CJJ4eit2YqKLw6BGayeA4eHnQi8FqNwieOuDmA7QLNuP7KH482k1oqmQwN8D7Mh6E5MpMpg3nL1VXrGd20J00qxt0GavI'
    token = request.form.get('stripeToken')
    
    headers = {'Authorization' : f'Bearer {api_key}'}
    data = {
            'amount' : 100, 
            'currency' : 'usd', 
            'description' : 'Another Charge', 
            'source' : token
        }

    r = requests.post('https://api.stripe.com/v1/charges', headers=headers, data=data)
    rec={"id":r.json()['id']}
    
    idsTable.insert_one(rec)
    item_details=idsTable.find()
    idPyment=[]
    for i in item_details:
        idPyment.append(i['id'])
    return  {'id':idPyment}